<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.admin.mapper.VoteManageMapper">
	<select id="projectList" resultType="com.sp.app.admin.model.ProjectManage">
		select pr.num, pr.title 
		FROM projectRequest pr
		LEFT JOIN project p ON p.num = pr.num
		WHERE p.block = 0
	</select>
	
<select id="voteList" parameterType="map" resultType="com.sp.app.admin.model.VoteManage">
SELECT *
FROM (
    SELECT ROWNUM rnum, tb.*
    FROM (
        SELECT v.vote_num, v.content, v.title, v.start_date,
            (SELECT p.thumbnail
             FROM ProjectRequest p
             JOIN VoteCandidate vc ON p.num = vc.project_num
             WHERE vc.vote_num = v.vote_num
             AND ROWNUM = 1) as thumbnail,
            COUNT(vh.memberIdx) as vote_count
        FROM vote v
        LEFT JOIN VoteHistory vh ON v.vote_num = vh.vote_num
        <where>
            <if test="kwd != null and kwd != ''">
                <choose>
                    <when test="schType == 'title'">
                        INSTR(v.title, #{kwd}) > 0
                    </when>
                    <when test="schType == 'content'">
                        INSTR(v.content, #{kwd}) > 0
                    </when>
                </choose>
            </if>
        </where>
        GROUP BY v.vote_num, v.content, v.title, v.start_date
        ORDER BY v.vote_num DESC
    ) tb
) WHERE rnum BETWEEN #{offset}+1 AND #{offset}+#{size}
</select>

	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT COUNT(*)
		FROM vote v
		<if test="kwd != null and kwd != '' ">
			<choose>
				<when test="schType == 'title'">
					AND INSTR(title, #{title}) gt; 0
				</when>
	            <when test="schType == 'content'">
	           		 AND INSTR(content, #{content}) gt; 0
	            </when>
			</choose>
		</if>
	</select>	
	
	<insert id="insertVote" parameterType="com.sp.app.admin.model.VoteManage">
		INSERT INTO vote (vote_num , start_date, title, content) 
		VALUES (vote_seq.NEXTVAL, #{start_date, jdbcType=DATE}, #{title, jdbcType=VARCHAR}, #{content, jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertVoteCandidate" parameterType="Long">
		INSERT INTO voteCandidate (project_num, vote_num)
		VALUES (#{num}, vote_seq.CURRVAL)
	</insert>
	
	<select id="findVote" parameterType="Long" resultType="com.sp.app.admin.model.VoteManage">
		SELECT vote_num, title, start_date, content
	    FROM vote
	    WHERE vote_num = #{vote_num}
	</select>
	
	<select id="findVoteCandidates" parameterType="Long" resultType="com.sp.app.admin.model.ProjectManage">
		SELECT vc.project_num AS num, pr.title, pr.thumbnail
	    FROM voteCandidate vc
	    JOIN projectRequest pr ON pr.num = vc.project_num
	    WHERE vote_num = #{vote_num}
	</select>
	
	<delete id="deleteVote" parameterType="Long">
		DELETE FROM vote
		WHERE vote_num = #{vote_num}
	</delete>
	
	<delete id="deleteVoteCandidate" parameterType="Long">
		DELETE FROM voteCandidate
		WHERE vote_num = #{vote_num}
	</delete>
	
	<delete id="deleteVoteHistory" parameterType="long">
		DELETE FROM voteCandidate
		WHERE vote_num = #{vote_num}
	</delete>
	
	<update id="updateVote" parameterType="com.sp.app.admin.model.VoteManage">
	
	</update>
	
</mapper>