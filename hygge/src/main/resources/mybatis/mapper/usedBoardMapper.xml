<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.UsedBoardMapper">
	<insert id="insertBoard" parameterType="com.sp.app.model.UsedBoard">
	    INSERT INTO usedBoard(board_num, memberIdx, title, content, reg_date, block, hitCount, category, deal, price, product)
	    	VALUES (#{num}, #{memberIdx}, #{title}, #{content}, SYSDATE, 0, 0, #{category}, 0, #{price}, #{product})
	</insert>
	<insert id="insertBoardFile" parameterType="map">
		INSERT INTO usedBoardFile(num, board_num, s_FileName) VALUES (used_board_file_seq.NEXTVAL, #{board_num}, #{s_FileName})
	</insert>

	<sql id="where-list">
		<choose>
			<when test="schType == 'all'">
				(INSTR(title, #{kwd}) &gt; 0 OR INSTR(content, #{kwd}) &gt; 0)
			</when>
			<when test="schType == 'userName'">
				(INSTR(nickName, #{kwd}) &gt; 0)
			</when>
			<when test="schType == 'sell'">
				(category = 0)
			</when>
			<when test="schType == 'buy'">
				(category = 1)
			</when>
			<otherwise>
				INSTR(${schType}, #{kwd}) &gt; 0
			</otherwise>
		</choose>
	</sql>

	<select id="seqValue" resultType="Long">
		SELECT used_board_seq.NEXTVAL from dual
	</select>

	<select id="listBoard" parameterType="map" resultType="com.sp.app.model.UsedBoard">
		SELECT board_num num, m.memberIdx memberIdx, m.nickName nickName, title, content, TO_CHAR(u.reg_date, 'YYYY-MM-DD') reg_date, hitCount, category, deal, price, product
		FROM usedBoard u
		JOIN member1 m ON u.memberIdx = m.memberIdx
		<where>
			<if test="kwd != null and kwd != ''">
				<include refid="where-list"/>
			</if>
			AND m.block = 0 AND u.block = 0
		</where>
		ORDER BY board_num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>

	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT COUNT(*)
		FROM usedBoard u
		JOIN member1 m ON m.memberIdx = u.memberIdx 
		<where>
			<if test="kwd != null and kwd != ''">
				<include refid="where-list"/>
			</if>
			AND m.block = 0 AND u.block = 0
		</where>
	</select>

	<select id="findById" parameterType="Long" resultType="com.sp.app.model.UsedBoard">
		SELECT board_num num, m.memberIdx memberIdx, m.nickName nickName, title, content, u.reg_date reg_date, hitCount, category, deal, price, product
		FROM usedBoard u
		JOIN member1 m ON m.memberIdx = u.memberIdx
		WHERE board_num = #{num}
	</select>

	<select id="findFileById" parameterType="Long" resultType="String">
		SELECT s_FileName
		FROM usedBoardFile
		WHERE board_num = #{num}
	</select>

	<delete id="deleteBoard" parameterType="Long">
		DELETE FROM usedBoard WHERE board_num = #{num}
	</delete>

	<delete id="deleteBoardFile" parameterType="Long">
		DELETE FROM usedBoardFile WHERE board_num = #{num}
	</delete>

	<insert id="insertReply" parameterType="com.sp.app.model.Reply">
		INSERT INTO usedBoardReply (num, memberIdx, board_num, content, reg_date, block, parent_num)
			VALUES (used_board_reply_seq.NEXTVAL, #{memberIdx}, #{board_num}, #{content}, SYSDATE, 0, #{parent_num})
	</insert>

	<select id="listReply" parameterType="map" resultType="com.sp.app.model.Reply">
		SELECT ubr.num num, ubr.memberIdx memberIdx, ubr.board_num board_num, content, ubr.reg_date reg_date, m.name name
		FROM usedBoardReply ubr
		JOIN member1 m ON ubr.memberIdx = m.memberIdx
		WHERE block = 0 AND parent_Num = 0 AND board_num = #{num}
		ORDER BY ubr.num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>

	<select id="replyCount" parameterType="Long" resultType="Integer">
		SELECT COUNT(*)
		FROM usedBoardReply
		WHERE block = 0 AND parent_Num = 0 AND board_num = #{num}
	</select>
</mapper>