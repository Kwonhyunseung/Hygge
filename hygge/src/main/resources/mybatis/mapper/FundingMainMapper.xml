<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.FundingMainMapper">

	<sql id="where-list">
		<if test="menu == 'category'">
			(pr.category_num = #{flag} OR c.parent_num = #{flag})
		</if>
		<if test="menu == 'hotContent'"></if>
		<if test="menu == 'new'"></if>
		<if test="menu == 'deadline'"></if>
		<if test="menu == 'comingsoon'"></if>
	</sql>
	<sql id="order-list">
		<if test="order == 'latest'">
			p.num DESC
		</if>
		<if test="order == 'popular'">
			total_amount DESC
		</if>
		<if test="order == 'deadline'">
			end_date ASC, total_amount DESC
		</if>
	</sql>

	<select id="listFunding" parameterType="map" resultType="com.sp.app.model.Funding">
		SELECT p.num num, title, thumbnail, project_info, target, sub.total_amount total_amount, p.end_date end_date
		FROM project p
		JOIN projectRequest pr ON p.num = pr.num
		LEFT OUTER JOIN category c ON pr.category_num = c.category_num
		LEFT OUTER JOIN
			(SELECT NVL(SUM(total_amount), 0) total_amount, project.num num
    		FROM PROJECT
    		LEFT OUTER JOIN product ON project.num = product.num
    		LEFT OUTER JOIN sales ON product.product_num = sales.product_num
    		LEFT OUTER JOIN payment ON payment.payment_num = sales.payment_num
    		GROUP BY project.num) sub ON sub.num = p.num
		<where>
			<if test="menu != null and menu != ''">
				<include refid="where-list"/>
			</if>
			AND p.end_date > SYSDATE AND p.block = 1
		</where>
		ORDER BY <include refid="order-list"/>
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>

	<select id="dataCountFunding" parameterType="map" resultType="Integer">
		SELECT COUNT(*)
		FROM project p
		LEFT OUTER JOIN projectRequest pr ON p.num = pr.num
		LEFT OUTER JOIN category c ON pr.category_num = c.category_num
		<where>
			<if test="menu != null and menu != ''">
				<include refid="where-list"/>
			</if>
			AND p.end_date > SYSDATE AND p.block = 1
		</where>
	</select>

	<select id="isUserLiked" parameterType="map" resultType="Integer">
		SELECT COUNT(*)
		FROM projectLike
		WHERE num = #{num} AND memberIdx = #{memberIdx}
	</select>

	<insert id="insertFundingLike" parameterType="map">
		INSERT INTO projectLike (num, memberIdx) VALUES (#{num}, #{memberIdx})
	</insert>

	<delete id="deleteFundingLike" parameterType="map">
		DELETE FROM projectLike WHERE num = #{num} AND memberIdx = #{memberIdx}
	</delete>

	<select id="listReview" parameterType="Long" resultType="com.sp.app.model.Review">
		SELECT review_num, r.content content, r.grade
		FROM review
		WHERE project_num = #{num}
	</select>
</mapper>